{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/friends/Friends.module.css","components/transactions/Transaction.module.css","components/profile/Profile.jsx","components/statistics/StatisticsList.jsx","components/friends/Friends.jsx","components/transactions/Transactions.jsx","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","stats","className","styles","Description","src","alt","Avatar","Name","Tag","Location","Stats","Lable","Quantity","followers","views","likes","Statistics","title","undefined","Title","StatList","map","datum","ListItem","style","backgroundColor","background","Label","label","Percentage","percentage","id","Friends","friends","FriendList","friend","Item","Status","isOnline","width","name","TransactionHistory","data","TableTitel","TransactionBody","Line","type","amount","currency","ReactDOM","render","StrictMode","user","friendList","transactionInfo","document","getElementById"],"mappings":"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","file":"static/js/main.9a7f8f47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__1Ih0t\",\"Description\":\"Profile_Description__3DvWb\",\"Avatar\":\"Profile_Avatar__1g4IN\",\"Name\":\"Profile_Name__2ULG8\",\"Tag\":\"Profile_Tag__1Nelg\",\"Location\":\"Profile_Location__kKrZO\",\"Item\":\"Profile_Item__vmR9L\",\"Stats\":\"Profile_Stats__18lal\",\"Label\":\"Profile_Label__19thY\",\"Quantity\":\"Profile_Quantity__1Ne1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__21yYU\",\"Title\":\"Statistics_Title__VEHp5\",\"StatList\":\"Statistics_StatList__2CQoX\",\"ListItem\":\"Statistics_ListItem__3TzSU\",\"Label\":\"Statistics_Label__1J8Oq\",\"Percentage\":\"Statistics_Percentage__3NLD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendList\":\"Friends_FriendList__1dyOv\",\"Item\":\"Friends_Item__e_URl\",\"Name\":\"Friends_Name__2AqTc\",\"Avatar\":\"Friends_Avatar__16Uvy\",\"Status\":\"Friends_Status__3FieZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"Transaction_TransactionHistory__1FCFs\",\"TableTitel\":\"Transaction_TableTitel__2bmeN\",\"TransactionBody\":\"Transaction_TransactionBody__28Q8Z\",\"Line\":\"Transaction_Line__XD7s-\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <div className={styles.Profile}>\n      <div className={styles.Description}>\n        <img src={avatar} alt=\"User avatar\" className={styles.Avatar} />\n        <p className={styles.Name}>{username}</p>\n        <p className={styles.Tag}>@{tag}</p>\n        <p className={styles.Location}>{location}</p>\n      </div>\n      <ul className={styles.Stats}>\n        <li>\n          <span className={styles.Lable}>Followers</span>\n          <span className={styles.Quantity}> {stats.followers}</span>\n        </li>\n        <li>\n          <span className={styles.Lable}>Views</span>\n          <span className={styles.Quantity}> {stats.views}</span>\n        </li>\n        <li>\n          <span className={styles.Lable}>Likes</span>\n          <span className={styles.Quantity}> {stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.Statistics}>\n      <div>\n        {' '}\n        {title !== undefined && <h2 className={styles.Title}>{title}</h2>}\n      </div>\n      <ul className={styles.StatList}>\n        {stats.map(datum => (\n          <li\n            key={datum.id}\n            className={styles.ListItem}\n            style={{ backgroundColor: `${datum.background}` }}\n          >\n            <span className={styles.Label}>{datum.label}</span>\n            <span className={styles.Percentage}>{datum.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n      background: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './Friends.module.css';\n\nconst Friends = ({ friends }) => {\n  return (\n    <ul className={styles.FriendList}>\n      {friends.map(friend => (\n        <li className={styles.Item} key={friend.id}>\n          <span\n            className={styles.Status}\n            style={{ backgroundColor: friend.isOnline ? 'green' : 'red' }}\n          ></span>\n          <img\n            className={styles.Avatar}\n            src={friend.avatar}\n            alt=\"User avatar\"\n            width=\"48\"\n          />\n          <p className={styles.Name}>{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFriends.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnline: PropTypes.bool,\n    }),\n  ).isRequired,\n};\n\nexport default Friends;\n","import PropTypes from 'prop-types';\nimport styles from './Transaction.module.css';\n\nconst TransactionHistory = ({ data }) => {\n  return (\n    <table className={styles.TransactionHistory}>\n      <thead>\n        <tr className={styles.TableTitel}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody className={styles.TransactionBody}>\n        {data.map(datum => (\n          <tr className={styles.Line} key={datum.id}>\n            <td>{datum.type}</td>\n            <td>{datum.amount}</td>\n            <td>{datum.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport user from './json/user.json';\nimport Profile from './components/profile/Profile.jsx';\nimport Statistics from './components/statistics/StatisticsList.jsx';\nimport data from './json/data.json';\nimport friendList from './json/friends.json';\nimport Friends from './components/friends/Friends.jsx';\nimport transactionInfo from './json/transactions.json';\nimport TransactionHistory from './components/transactions/Transactions.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Profile\n      username={user.username}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={data} />\n    <Friends friends={friendList}></Friends>\n    <TransactionHistory data={transactionInfo}></TransactionHistory>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}